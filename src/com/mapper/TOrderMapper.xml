<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mapper.TOrderMapper" >
  <resultMap id="BaseResultMap" type="com.models.TOrder" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_status" property="orderStatus" jdbcType="VARCHAR" />
    <result column="order_address" property="orderAddress" jdbcType="VARCHAR" />
    <result column="order_logistics_price" property="orderLogisticsPrice" jdbcType="DOUBLE" />
    <result column="buyer_id" property="buyerId" jdbcType="INTEGER" />
    <result column="shop_id" property="shopId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, order_status, order_address, order_logistics_price, buyer_id, shop_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.models.TOrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.models.TOrderExample" >
    delete from t_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.models.TOrder" >
    insert into t_order (id, order_status, order_address, 
      order_logistics_price, buyer_id, shop_id
      )
    values (#{id,jdbcType=INTEGER}, #{orderStatus,jdbcType=VARCHAR}, #{orderAddress,jdbcType=VARCHAR}, 
      #{orderLogisticsPrice,jdbcType=DOUBLE}, #{buyerId,jdbcType=INTEGER}, #{shopId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.models.TOrder" >
    insert into t_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderStatus != null" >
        order_status,
      </if>
      <if test="orderAddress != null" >
        order_address,
      </if>
      <if test="orderLogisticsPrice != null" >
        order_logistics_price,
      </if>
      <if test="buyerId != null" >
        buyer_id,
      </if>
      <if test="shopId != null" >
        shop_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderStatus != null" >
        #{orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="orderAddress != null" >
        #{orderAddress,jdbcType=VARCHAR},
      </if>
      <if test="orderLogisticsPrice != null" >
        #{orderLogisticsPrice,jdbcType=DOUBLE},
      </if>
      <if test="buyerId != null" >
        #{buyerId,jdbcType=INTEGER},
      </if>
      <if test="shopId != null" >
        #{shopId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.models.TOrderExample" resultType="java.lang.Integer" >
    select count(*) from t_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_order
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderStatus != null" >
        order_status = #{record.orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.orderAddress != null" >
        order_address = #{record.orderAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.orderLogisticsPrice != null" >
        order_logistics_price = #{record.orderLogisticsPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.buyerId != null" >
        buyer_id = #{record.buyerId,jdbcType=INTEGER},
      </if>
      <if test="record.shopId != null" >
        shop_id = #{record.shopId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_order
    set id = #{record.id,jdbcType=INTEGER},
      order_status = #{record.orderStatus,jdbcType=VARCHAR},
      order_address = #{record.orderAddress,jdbcType=VARCHAR},
      order_logistics_price = #{record.orderLogisticsPrice,jdbcType=DOUBLE},
      buyer_id = #{record.buyerId,jdbcType=INTEGER},
      shop_id = #{record.shopId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.models.TOrder" >
    update t_order
    <set >
      <if test="orderStatus != null" >
        order_status = #{orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="orderAddress != null" >
        order_address = #{orderAddress,jdbcType=VARCHAR},
      </if>
      <if test="orderLogisticsPrice != null" >
        order_logistics_price = #{orderLogisticsPrice,jdbcType=DOUBLE},
      </if>
      <if test="buyerId != null" >
        buyer_id = #{buyerId,jdbcType=INTEGER},
      </if>
      <if test="shopId != null" >
        shop_id = #{shopId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.models.TOrder" >
    update t_order
    set order_status = #{orderStatus,jdbcType=VARCHAR},
      order_address = #{orderAddress,jdbcType=VARCHAR},
      order_logistics_price = #{orderLogisticsPrice,jdbcType=DOUBLE},
      buyer_id = #{buyerId,jdbcType=INTEGER},
      shop_id = #{shopId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>